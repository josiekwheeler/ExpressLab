{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/api.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private http: HttpClient) {}\n\n  getItems() {\n    return this.http.get(\"/api/cartitems\", { responseType: \"json\"});\n  }\n\n  addItem(newItem) {\n    return this.http.post(\"/api/cartitems\", { id: newItem }, { responseType: \"json\"});\n  }\n\n  deleteItem(id) {\n    return this.http.delete(`/api/cartitems/${id}`, { responseType: \"json\"});\n  }\n\n  updateItem(newid, oldid) {\n    return this.http.put(`/api/cartitems/${oldid}`, { id: newid }, { responseType: \"json\"});\n  }\n  \n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n<h1>Items of Greatness</h1>\\n\\n<!-- <form #itemsForm=\\\"ngForm\\\" (ngSubmit)=\\\"addNewItem(ItemsForm.value.newItem)\\\">\\n    <label for=\\\"\\\">New Item</label>\\n    <input type=\\\"text\\\" ngModel name=\\\"newItem\\\">\\n    <button>Add Item</button>\\n</form> -->\\n\\n\\n<div *ngFor=\\\"let item of cartitems\\\">\\n    <p>{{ item.id }}</p>\\n    <p>{{ item.product }}</p>\\n    <p>{{ item.price }}</p>\\n    <p>{{ item.quantity }}</p>\\n    <button (click)=\\\"deleteItem(item)\\\">X</button>\\n\\n    <!-- <form #updateForm=\\\"ngForm\\\" (ngSubmit)=\\\"updateAnItem(updateForm.value.updatedItemId, item.id)\\\">\\n        <label for=\\\"\\\">Edit An Item</label>\\n        <input type=\\\"text\\\" ngModel name=\\\"updatedItemName\\\">\\n        <button>Save Item</button>\\n    </form> -->\\n</div>\"","import { Component } from '@angular/core';\nimport { ApiService } from './api.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'expressLab';\n\n  cartitems: any;\n\n  constructor(private apiService: ApiService) {\n    this.apiService.getItems().subscribe(response => {\n      this.cartitems = response;\n    });\n  }\n\n  addNewItem(newItem) {\n    this.apiService.addItem(newItem).subscribe(response => {\n      this.cartitems = response;\n    });\n  }\n\n  deleteItem(index: number) {\n    this.apiService.deleteItem(index).subscribe(response => {\n      this.cartitems = response;\n    });\n  }\n\n  updateAnItem (newid, oldid) {\n    this.apiService.updateItem(newid, oldid).subscribe(response => {\n      this.cartitems = response;\n    });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { AppComponent } from './app.component';\nimport { ApiService } from \"./api.service\";\nimport { FormsModule } from \"@angular/forms\";\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [ApiService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}